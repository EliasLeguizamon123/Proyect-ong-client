# image: atlassian/default-image:2
image: node:10.15.3

pipelines:
  branches:
    develop:
      - parallel:
        # - step:
        #     name: Installing & Running Tests
        #     caches:
        #       - node
        #     script:
        #       - npm install
        #       - npm run test:nowatch
        - step:
            name: Build
            script:
              - npm install
              - npm run build
            artifacts:
              - build/*
        # - step:
        #     name: Security Scan
        #     script:
        #       # Run a security scan for sensitive data.
        #       # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
        #       - pipe: atlassian/git-secrets-scan:0.4.3
        - step:
            name: Deploy to Production
            deployment: Production
            trigger: manual
            clone:
              enabled: false
            script:
              # Sync files to S3 bucket
              - pipe: atlassian/aws-s3-deploy:0.4.5
                variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                  S3_BUCKET: $PRODUCTION_BUCKET_NAME
                  LOCAL_PATH: 'build'
                  ACL: 'public-read'
              # triggering a distribution invalidation to refresh the CDN caches
              - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
                variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                  DISTRIBUTION_ID: $PRODUCTION_DISTRIBUTION_ID
  pull-requests:
    "**":
      - step:
          name: Installing & Running Test
          caches:
            - node
          script:
            - rm -rf package-lock.json
            - rm -rf node_modules
            - npm install
            - npm run test:nowatch
      - step:
          name: Code linting
          script:
            - npm install
            - npm run lint
          caches:
            - node